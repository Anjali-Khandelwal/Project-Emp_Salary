CREATE USER payroll IDENTIFIED BY AnhChi0912 
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP;
GRANT connect TO payroll ;
GRANT resource TO payroll ;
commit;


Create table Employee (
Employee_ID char(4) not null,
FName varchar2(50) not null,
LName varchar2(50),
DOB date DEFAULT Sysdate,
Jobtilte varchar2(50),
Email varchar (320)NOT NULL,
Basic_Weekly_hours number (3)NOT NULL
);

Alter table EMPLOYEE
Add constraint pk_EMPLOYEE primary key (EMPLOYEE_ID);

Create table Bonus (
Bonus_ID char (4) not null,
Employee_ID char(4) not null,
BonusDate date DEFAULT Sysdate,
BonusPayment char(10)
);

Alter table BONUS
Add CONTRAINT PK_BONUS PRIMARY KEY (BONUS_ID),
Constraint fk_BONUS foreign key (EMPLOYEE_ID)
References EMPLOYEE (EMPLOYEE_ID);

Create table Salary (
Salary_ID char (4) not null,
Employee_ID char(4) not null,
Payrate number(3,2),
Note varchar(2000)
);

Alter table SALARY
Add CONSTRAINT PK_SALARY PRIMARY KEY (EMPLOYEE_ID);

Alter table SALARY
Add constraint fk_SALARY foreign key (EMPLOYEE_ID)
References EMPLOYEE (EMPLOYEE_ID);

Create table Payroll (
Payroll_ID char (4) not null,
Employee_ID char(4) not null,
StartDate date,
EndDate date,
PayDate date,
NetPay number (8,2)
);

Alter table PAYROLL
Add CONSTRAINT PK_PAYROLL PRIMARY KEY (PAYROLL_ID, EMPLOYEE_ID);

Alter table PAYROLL
Add constraint fk_PAYROLL foreign key (EMPLOYEE_ID)
References EMPLOYEE (EMPLOYEE_ID);


CREATE SEQUENCE Employee_SEQ
MINVALUE 100
MAXVALUE 300
START WITH 100
INCREMENT BY 1
CACHE 100;

CREATE SEQUENCE Bonus_SEQ
MINVALUE 300
MAXVALUE 400
START WITH 300
INCREMENT BY 1
CACHE 100;

CREATE SEQUENCE Payroll_SEQ
MINVALUE 300
MAXVALUE 3000
START WITH 300
INCREMENT BY 1
CACHE 100;

CREATE SEQUENCE Salary_SEQ
MINVALUE 10
MAXVALUE 3000
START WITH 10
INCREMENT BY 1
CACHE 100;

CREATE OR REPLACE TRIGGER EMPLOYEE_ID_GEN
BEFORE INSERT ON EMPLOYEE
FOR EACH ROW
WHEN (NEW.EMPLOYEE_ID IS NULL)
BEGIN
SELECT EMPLOYEE_SEQ.NEXTVAL
INTO :NEW.EMPLOYEE_ID
FROM DUAL;
END;

CREATE OR REPLACE TRIGGER BONUS_ID_GEN
BEFORE INSERT ON BONUS
FOR EACH ROW
WHEN (NEW.BONUS_ID IS NULL)
BEGIN
SELECT BONUS_SEQ.NEXTVAL
INTO :NEW.BONUS_ID
FROM DUAL;
END;

CREATE OR REPLACE TRIGGER PAYROLL_ID_GEN
BEFORE INSERT ON PAYROLL
FOR EACH ROW
WHEN (NEW.PAYROLL_ID IS NULL)
BEGIN
SELECT PAYROLL_SEQ.NEXTVAL
INTO :NEW.PAYROLL_ID
FROM DUAL;
END;

CREATE OR REPLACE TRIGGER SALARY_ID_GEN
BEFORE INSERT ON SALARY
FOR EACH ROW
WHEN (NEW.SALARY_ID IS NULL)
BEGIN
SELECT SALARY_SEQ.NEXTVAL
INTO :NEW.SALARY_ID
FROM DUAL;
END;

INSERT INTO EMPLOYEE (FNAME, LNAME, DOB, JOBTILTE, EMAIL, BASIC_WEEKLY_HOURS) VALUES  
('SMITH','JOHN', '20/5/1987', 'PROJECT MANAGER',  'SMITH.JOHN@GMAIL.COM', '40');

INSERT INTO EMPLOYEE (FNAME, LNAME, DOB, JOBTILTE, EMAIL, BASIC_WEEKLY_HOURS) VALUES  
('ALLEN','KEVIN', '10/6/1986', 'OFFICE ADMINISTRATION', 'ALLEN.KEVIN@GMAIL.COM', '20');

INSERT INTO EMPLOYEE (FNAME, LNAME, DOB, JOBTILTE, EMAIL, BASIC_WEEKLY_HOURS) VALUES  
('DOYLE','JEAN', '6/10/1990', 'PROGRAMMER', 'DOYLE.JEAN@GMAIL.COM', '30');


INSERT INTO BONUS (EMPLOYEE_ID, BONUSDATE, BONUSPAYMENT) VALUES  
('100', '20/5/2014', '2000');

INSERT INTO BONUS (BONUSDATE, BONUSPAYMENT, EMPLOYEE_ID) VALUES
('20/7/2015', '1000', '102');


INSERT INTO SALARY (EMPLOYEE_ID, PAYRATE, NOTE) VALUES  
('100', 200.00, 'FULLTIME');

INSERT INTO SALARY (EMPLOYEE_ID, PAYRATE, NOTE) VALUES  
('101', '30.00', 'PARTTIME');

INSERT INTO SALARY (EMPLOYEE_ID, PAYRATE, NOTE) VALUES  
('102', '150', 'PARTTIME');

INSERT INTO PAYROLL (EMPLOYEE_ID, STARTDATE, ENDDATE, PAYDATE)VALUES
('100', '20/7/2015', '26/7/2015', '29/7/2015');

INSERT INTO PAYROLL (EMPLOYEE_ID, STARTDATE, ENDDATE, PAYDATE)VALUES
('101', '20/7/2015', '26/7/2015', '29/7/2015');

INSERT INTO PAYROLL (EMPLOYEE_ID, STARTDATE, ENDDATE, PAYDATE)VALUES
('102', '20/7/2015', '26/7/2015', '29/7/2015');
